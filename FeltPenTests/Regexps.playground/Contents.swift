import UIKit

//#-hidden-code
func parse(string: String, regex: NSRegularExpression) -> NSAttributedString {
    let matches = regex.matches(in: string, options: [], range: NSRange(location: 0, length: string.characters.count))
    
    let attrString = NSMutableAttributedString.init(string: "\(string)",
        attributes: [ NSBackgroundColorAttributeName : #colorLiteral(red: 0.9254902005, green: 0.6173418388, blue: 0.5980237226, alpha: 1)])
    for match in matches {
        attrString.setAttributes([NSBackgroundColorAttributeName: UIColor.green], range: match.range)
    }
    attrString.insert(.init(string: "\(matches.count): \t", attributes: nil), at: 0)
    return attrString
}
func parse(string: String, regexPattern: String) -> NSAttributedString {
    let result: NSAttributedString
    if let regex = try? NSRegularExpression.init(pattern: regexPattern, options: []) {
        result = parse(string: string, regex: regex)
    }
    else {
        result = NSAttributedString.init(string: "INVALID REGEX =(", attributes: [NSBackgroundColorAttributeName : #colorLiteral(red: 0.9254902005, green: 0.6173418388, blue: 0.5980237226, alpha: 1),
                                                                                  NSForegroundColorAttributeName : #colorLiteral(red: 0, green: 0, blue: 0, alpha: 1)])
    }
    return result
}
//#-end-hidden-code

//: Change string/pattern here
//#-editable-code
let pattern = "(?<=(^|\\s)(_|\\*|`)\\*?)(_|\\*|`)"

let string = "      *_*`test`_"
//#-end-editable-code

let result = parse(string: string, regexPattern: pattern)
