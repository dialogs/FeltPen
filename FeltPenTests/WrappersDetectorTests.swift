//
//  WrappersDetectorTests.swift
//  FeltPen
//
//  Created by Aleksei Gordeev on 08/07/2017.
//  Copyright Â© 2017 CocoaPods. All rights reserved.
//

import XCTest

@testable import FeltPen

class WrappersDetectorTests: XCTestCase {
    
    func testDetectorPerfomance() {
        let text = loadSampleText()
        let attributedText = NSMutableAttributedString.init(string: text)
        let detector = WrappersDetector.init(searchingItems: [.asteriks, .backtick, .tilde, .underscore])
        
        self.measure({
            _ = try! detector.process(text: attributedText)
        })
    }
    
    func testBasicDecoratorPerformance() {
        let text = String.init(repeating: "_test_ *test* `test` test ", count: 100)
        let attributedText = NSMutableAttributedString.init(string: text)
        let detector = WrappersDetector.init()
        
        self.measure {
            _ = try! detector.process(text: attributedText)
        }
    }
    
    private func loadSampleText(wrapped: Bool = true) -> String {
        let bundle = Bundle(for: type(of: self))
        let url = bundle.url(forResource: "SampleText", withExtension: "txt")!
        let string = try! String.init(contentsOf: url)
        return wrapped ? string.wrappingEveryOddWord(with: "`") : string
    }
}

fileprivate extension String {
    fileprivate func wrappingEveryOddWord(with string: String) -> String {
        let words: [String] = self.components(separatedBy: .whitespaces).enumerated().map({ (idx, word) in
            return (idx % 2 == 0) ? word : string.appending(word).appending(string)
        })
        return words.joined(separator:" ")
    }
}
